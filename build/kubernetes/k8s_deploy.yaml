apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: "${GIT_COMMIT_MESSAGES}"
  labels:
    app: ${JOB_NAME}
  name: ${JOB_NAME}
  namespace: ${K8S_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${JOB_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${JOB_NAME}
    spec:
      # hostAliases:

      containers:
      - name: ${JOB_NAME}
        image: bigdata-registry.local:5043/${DOCKER_IMAGE}
        ports:
        - containerPort: 3000
        # readinessProbe:
        #   httpGet:
        #     path: /postTotalRecord?name=lala&dataDate=2020-10-29&total=3&source=source1
        #     port: 9001
        #   failureThreshold: 
        #   periodSeconds: 10
        envFrom:
        - configMapRef:
            name: ${JOB_NAME}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-c", "sleep 15"]
---
apiVersion: v1
kind: Service
metadata:
  name: ${JOB_NAME}
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${JOB_NAME}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: ${JOB_NAME}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: ${JOB_NAME}
  namespace: ${K8S_NAMESPACE}
spec:
  rules:
  - host: ${JOB_NAME}.${HOST_APP}
    http:
      paths:
      - backend:
          serviceName: ${JOB_NAME}
          servicePort: 80
        path: /
